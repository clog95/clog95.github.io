[{"content":"Overview In this tutorial I will show you how to self-hosting a Ghost Blog on Google Cloud Platform (GCP) by deploying a VM Instance install Ubuntu 18.04 LTS or 20.04 LTS server.\nPrerequisites To follow this tutorial, you will need:\nYour own valid GPC account. A registered domain name. Note: Before getting started, you should set up a DNS A record from your domain, pointing to the server\u0026rsquo;s IP address on VM Instance. This must be done so that SSL can be automatically configured.\n1. Create a VM Instance and set up a static IP. Create a VM Instance If you have owned a valid GPC account, now you can create a VM Instance with boot disk is Ubuntu 20.04 LTS or Ubuntu 18.04.\nWhen your VM Instance is created, you can see the name and an External IP address. Because the External IP address is changed every time you startup, this will result in some troubles later so you need to set a fixed External IP address.\nSet a static IP You can see in this video how to create a VM Instance and assign a static IP address for it:\nFinally, probably take a little time until your VM Instance is updated, backward your VM Instances page you can see your fixed External IP address corresponding, it not changed when you startup the server.\n2. Pointing a DNS A record from your own domain to the server\u0026rsquo;s static IP address. Because the source code and database of your Ghost blog will be installed on Ubuntu server that you have installed on your VM Instance. To users can see your site on the Internet via your domain name, you need a DNS A record of the domain that points to the static IP address on the server.\nHere I used the domain service of Google, the processing is a little bit different from other domain services. You can search on Google the way that manages DNS and how to create and point a DNS A record to.\nI go to the Google Domains page, here you can see I have purchased some domains. I will use the domain clog95.com, now click on it. On the left side, I click on DNS to go into the DNS settings page. On this DNS page, you can see a DNS A record exists, now I will remove it then create a new A record. Here I create a record with Type is A and Data is the static IP address on the server, the Host name and TTL options leave as default. You can cover the DNS A record here. 3. Set up a Firewall with UFW on your server I will perform this processing via command line, so I need to connect to the server via SSH. Now click on SSH that corresponds with the server you need to connect to, if successful a Terminal will appear and you can start to take some commands.\nFirst , update and upgrade packages on your server.\nsudo apt update sudo apt upgrade Checking the UFW status, default is inactive\nsudo ufw status Let\u0026rsquo;s set the UFW to the default, deny all incoming and allow all outgoing connections.\nsudo ufw default deny incoming sudo ufw default allow outgoing Lists the UFW apps\nsudo ufw app list Allowing SSH connections, you need take this action to connect to the server via SSH later\nsudo ufw allow OpenSSH Checking the UFW status again, it is still inactive\nsudo ufw status Enabling UFW, with this command will appear a question that says: \u0026ldquo;Command may disrupt existing ssh connections. Proceed with operation (y|n)?\u0026rdquo; - you press y then Enter to agree\nsudo ufw enable Checking the UFW status again, now it is active and you can see OpenSSH is allowed\nsudo ufw status Now, exits your SSH connect\nexit 4. Install Nginx Ghost uses Nginx for web server, now install it\nsudo apt install nginx Now, let\u0026rsquo;s list the UFW apps and you can see Nginx Full in this list\nsudo ufw app list You need adjust the firewall to allow access to the web server, to do that simply allows HTTP and HTTPS connections by use UFW\nsudo ufw allow \u0026#34;Nginx Full\u0026#34; Checking the UFW status, now you can see Nginx Full is allowed\nsudo ufw status 5. Install Mysql Ghost uses Mysql server to manage your database, now install it:\nsudo apt install mysql-server Now you need to login to MySQL to update the root user with its password due to Ghost-CLI will use it to access MySQL and create a database for your Ghost Blog. Take a few extra steps:\n# Login to MySQL sudo mysql # Now update the password for your root user # Replace 12345 with your chosen password ALTER USER \u0026#39;root\u0026#39;@\u0026#39;localhost\u0026#39; IDENTIFIED WITH mysql_native_password BY \u0026#39;12345\u0026#39;; # Exit MySQL quit 6. Install Node.js Naturally Ghost Blog is written by Node.js, and so you need to install it:\n# Add the NodeSource APT repository for Node 16 curl -sL https://deb.nodesource.com/setup_16.x | sudo -E bash - # Install Node.js sudo apt install nodejs # Verify the version of Node.js # You should have version 16 of Node.js installed node -v 7. Install Ghost-CLI Ghost-CLI is a command line tool to help you get Ghost installed and configured for use, quickly and easily:\nsudo npm install ghost-cli@latest -g 8. Install Ghost Blog Once your server is correctly set up and Ghost-CLI is installed, it\u0026rsquo;s time to go to the end of the install process by taking some extra steps to install and run your Ghost Blog on the Internet environment.\nCreate a directory Following some instructions and commands below to create a directory for your Ghost Blog with its own user and permissions is proper setup:\n# Create directory: here I named clog95. # You can change clog95 to whatever you like. sudo mkdir /var/www/clog95 # Set directory owner of clog95 is current user. sudo chown -R $USER:$USER /var/www/clog95 # Set the correct permissions for clog95 directory. sudo chmod -R 775 /var/www/clog95 # Go into the clog95 directory to install Ghost Blog. cd /var/www/clog95 Run the install process: Now inside the directory you just created, run the following command to start the install process:\nghost install Note: After running the install command above, the CLI will ask you a number of questions to configure your site and you must answer it to run your site.\nBlog URL Enter your domain name with HTTP or HTTPS protocol. Here I want Ghost-CLI is automatically set up SSL for me so I will use HTTPS protocol for my domain: https://clog95.com\nMySQL hostname Because we have installed MySQL on the same server with Ghost blog, so you just simply press Enter to use the default value is localhost.\nMySQL username and password In the install MySQL section Above, I have set up the root user with its password is 12345. So I just need supply root for MySQL username and 12345 for password (pay attention: password is hidden when you press on keyboard)\nGhost database name Enter the name of your database, Ghost-CLI will automatically set up for you. Here I name it is clog95 (change clog95 to one that that you want)\nSet up a ghost MySQL user? You just need press y then Enter, with this you have agreed to Ghost-CLI to create a custom MySQL user that can only access/edit your new Ghost database and nothing else.\nSet up Nginx Just need press y then Enter, Nginx will automatically set up your site to be viewed on the Internet environment.\nSet up SSL? If you want a SSL certificate for your domain and you have already pointed your domain to the static IP address of your server. Now just press y then Enter, Ghost-CLI can automatically set up a SSL certificate for you using Letï¿½s Encrypt.\nEnter your email When you set up an SSL certificate, it will require an email address so that you can be kept informed about your SSL certificate such as expired and renewal.\nSet up systemd? Just press y then Enter to agree to set up systemd that is manager tool to keep Ghost blog running smoothly.\nStart ghost? Now, press y then Enter to make your site work.\n","date":"2022-09-20T00:00:00Z","image":"https://clog95.com/posts/how-to-install-your-own-ghost-blog-on-google-cloud-platform/_hucb2183908321289259a976b6056abf3d_289784_450755e4bd5613d5cc7c5cd52191d620.jpg","permalink":"https://clog95.com/posts/how-to-install-your-own-ghost-blog-on-google-cloud-platform/","title":"How to install your own Ghost Blog on Google Cloud Platform"},{"content":"Introduction A LAMP stack is a group of four open-source software that form the foundation of building and running high performance web servers to host dynamic websites and web applications. This term is an acronym for Linux (the operating system ), Apache (the web server), MySQL (the database), PHP/Perl/Python (the programming language). Some popular LAMP applications are Wiki\u0026rsquo;s, the majority of modern Content Management Systems (CMS such as WordPress, Joomla, Drupal, and Magento require a LAMP stack to work).\nTo build and run a website with PHP or you use some framework of PHP such as Codeigniter or Laravel you need a LAMP stack for your web server to store data and deliver web content through the internet.\nTherefore, in this guide, I will show you how to set up a LAMP stack on an Ubuntu 20.04 server for building and running the PHP applications.\nPrerequisites An Ubuntu 20.04 server A non-root sudo user 1. Set up a Firewall with UFW on your server Start by updating and upgrading packages on your Ubuntu server. If this is the first time you\u0026rsquo;re using sudo within this session of Terminal, you\u0026rsquo;ll be prompted to provide your user\u0026rsquo;s password to confirm you have the right privileges. Open your Terminal then enter two line commands below in order:\nsudo apt update sudo apt upgrade Note: the first time you run the command sudo apt upgrade that it will ask: \u0026ldquo;Do you want to continue? [Y/n]\u0026rdquo; - press y then Enter to continue.\nChecking the UFW status. Normally, the default is inactive:\nsudo ufw status Let\u0026rsquo;s set the UFW to the default, deny all incoming and allow all outgoing connections:\nsudo ufw default deny incoming sudo ufw default allow outgoing Lists the UFW apps\nsudo ufw app list Allowing SSH connections, you need take this action to connect to the server via SSH later:\nsudo ufw allow OpenSSH Checking the UFW status again, it still inactive:\nsudo ufw status Enabling UFW, with this command will appear a question that says: \u0026ldquo;Command may disrupt existing ssh connections. Proceed with operation (y|n)?\u0026rdquo; - press y then Enter to agree:\nsudo ufw enable Checking the UFW status again, now it is active and you can see ssh is allowed:\nsudo ufw status 2. Install Apache Web Server Apache is the most commonly used Web Server in the world. It is often used in combination with the MySQL database, the PHP scripting language, and other scripting languages such as Python or Perl. This configuration is termed LAMP (Linux, Apache, MySQL and Perl/Python/PHP) and forms a powerful and robust platform for development and deployment of the web applications. That is why it is the best choice for you.\nThe Apache Web Server is available in Ubuntu Linux, so to install use the following command:\nsudo apt install apache2 You\u0026rsquo;ll also be prompted to confirm Apache\u0026rsquo;s installation: \u0026ldquo;Do you want to continue? [Y/n]\u0026rdquo; - press y, then Enter to agree.\nOnce the installation is finished, let\u0026rsquo;s list all currently available UFW apps, you can run the command below:\nsudo ufw app list You\u0026rsquo;ll see the output like this:\nAvailable applications: Apache Apache Full Apache Secure OpenSSH With the outputs above, what does it mean?\nApache: This opens only port 80 - which is what unencrypted web servers use. Apache Full: Thisopens both ports 80 and 443. Port 80 (which is what unencrypted web servers use.), 443 (which is what encrypted web servers use) Apache Secure: This opens only port 443 (TLS/SSL encrypted traffic) - which is what encrypted web servers use. For now, it\u0026rsquo;s best to adjust the firewall to allow connections to your web server on port 80 (unencrypted web traffic), because you just installed a fresh Apache web server and you still don\u0026rsquo;t have a TLS/SSL certificate configured to allow HTTPS traffic (encrypted web traffic) on your Apache server. To allow connections on port 80, use the command below:\nAvailable applications: sudo ufw allow \u0026#34;Apache\u0026#34; You can check the UFW status to verify this change:\nsudo ufw status You can see the output like below:\nStatus: active To Action From -- ------- ---- OpenSSH ALLOW Anywhere Apache ALLOW Anywhere OpenSSH (v6) ALLOW Anywhere (v6) Apache (v6) ALLOW Anywhere (v6) To check whether you have installed Apache web server successfully, now visit your server\u0026rsquo;s public IP address in your web browser. Replace the IP address below ( 192.0.2.1 ) by your own server\u0026rsquo;s public IP:\nhttp://192.0.2.1 You should see the default Apache web page as shown below:\nThe root directory of the default Apache virtual host is at /var/www/html and it has an index.html file. This file contains the information of the default Apache web page and you just saw this page above. You can check by go into /var/www/html directory by the cd command then list all files in this directory by the ls command and you should see an index.html file is listed:\ncd /var/www/html ls Now, you should see the index.html file is listed on the output:\nindex.html The default virtual host\u0026rsquo;s configuration file is located in /etc/apache2/sites-available directory and its name is 000-default.conf. You can see this configuration file by going into /etc/apache2/sites-available directory by the cd command then list all files in this directory by the ls command and you should see a file that its name is 000-default.conf :\ncd /etc/apache2/sites-available ls You should see the 000-default.conf file is listed on the output:\n000-default.conf default-ssl.conf Open the 000-default.conf file by the cat command:\ncat 000-default.conf After run the command above, it will show the content of the 000-default.conf file for you, and you can find to see line of the DocumentRoot directive as bellow:\n\u0026lt;VirtualHost *:80\u0026gt; ServerAdmin webmaster@localhost DocumentRoot /var/www/html \u0026lt;/VirtualHost\u0026gt; Note: the 000-default.conf file is a configuration file of the default Apache virtual host. And you pay attention to the DocumentRoot directive above, this directive specifies /var/www/html directory is the root directory of the default Apache virtual host. And we just have covered above that the /var/www/html directory has an index.html file by default. The /var/www/html directory is the root directory of the default Apache virtual host that holds the assets of the site such as PHP script, HTML, CSS and Javascript files, images.\nNow we have installed Apache web server and covered the root directory and the configuration file of the default Apache virtual host. Next step, we will install the MySQL database system on the server to store the data for your site.\n3. Install MySQL MySQL is a popular database management system that is used combined with PHP on server side to handle and store datas from the users for your site.\nTo install MySQL, run the following command:\nsudo apt install mysql-server When you are prompted to confirm the installation: \u0026ldquo;Do you want to continue? [Y/n]\u0026rdquo; - press y then Enter to agree.\nWhen the installation is done, I recommend you take an extra step to ensure security for your server. Now run the command below to start the script that will re-setup some insecure options of the default configuration on your MySQL.\nsudo mysql_secure_installation By running the command above, it will walk you through some extra steps to change some of your MySQL installation\u0026rsquo;s security options. The first will ask whether you\u0026rsquo;d like to set up the VALIDATE PASSWORD component. This component will help you check a password that satisfies the specified criteria.\nPress y to set up the VALIDATE PASSWORD component:\nVALIDATE PASSWORD COMPONENT can be used to test passwords and improve security. It checks the strength of password and allows the users to set only those passwords which are secure enough. Would you like to setup VALIDATE PASSWORD component? Press y|Y for Yes, any other key for No: y Now, it will show you 3 levels of password validation: LOW, MEDIUM and STRONG. You can choose one of 3 levels by pressing 0 for LOW, 1 for MEDIUM and 2 for STRONG. Keep in mind that if you enter 2 for the strongest level, you will receive errors when attempting to set any password which does not contain numbers, upper and lowercase letters, and special characters, or which is based on common dictionary words. To simple, I choose 0 for LOW level:\nThere are three levels of password validation policy: LOW Length \u0026gt;= 8 MEDIUM Length \u0026gt;= 8, numeric, mixed case, and special characters STRONG Length \u0026gt;= 8, numeric, mixed case, special characters and dictionary file Please enter 0 = LOW, 1 = MEDIUM and 2 = STRONG: 0 Next, it will ask you to set a password for MySQL root user (don\u0026rsquo;t confuse it with the system root user). When you enter the password which is invisible for you, then re-enter the password again and Enter to continue.\nPlease set the password for root here. New password: Re-enter new password: Because we have set up the VALIDATE PASSWORD component, it will estimate the strength of the password you just entered. And ask whether you wish to continue with that password. If you are satisfied with it\nEstimated strength of the password: 25 Do you wish to continue with the password provided?(Press y|Y for Yes, any other key for No) : ==Conflicting\u0026hellip;==\n4. Install PHP We have installed Apache to serve your site\u0026rsquo;s assets such as store folders, files, images and site\u0026rsquo;s configuration files. MySQL to store, handle and manage your site\u0026rsquo;s data. Now, we will install PHP and PHP codes will be used combined with Apache and MySQL to handle the datas then display the dynamic content to the visitor.\nIn addition, to PHP can work together with Apache and MySQL you need the Apache PHP module is libapache2-mod-php to enable Apache to handle PHP files, and the php-mysql package to allow PHP to communicate with MySQL databases.\nTo install PHP and those above, run the following command:\nsudo apt install php libapache2-mod-php php-mysql It will ask whether you want to continue the process installation: \u0026ldquo;Do you want to continue? [Y/n]\u0026rdquo; - press y then Enter to agree to install.\nOnce the installation is finished , you can confirm the version of PHP by the following command:\nphp -v The output look like this:\nPHP 7.4.3 (cli) (built: Jun 13 2022 13:43:30) ( NTS ) Copyright (c) The PHP Group Zend Engine v3.4.0, Copyright (c) Zend Technologies with Zend OPcache v7.4.3, Copyright (c), by Zend Technologies At this point, you have fully installed LAMP stack: Apache2 Web Server, MySQL database management system, and PHP scripting language. It\u0026rsquo;s time to set up a new Apache Virtual Host to serve your new site. Let\u0026rsquo;s go to the next step.\n5. Create an Apache Virtual Host for Your Site. As we have covered in step 2 that Apache has a default virtual host with its own configuration file and root directory. But, instead of using and modifying the default Apache virtual host you should create a new virtual host with its own configuration file and root directory. And you can freely create additional virtual hosts for multiple websites on the same server, a virtual host serves for a website (serves for a domain).\nTo create a virtual host you need to create a configuration file for it in the /etc/apache2/sites-available directory, the same location of the default virtual host\u0026rsquo;s configuration file is 000-default.conf file. Then you specify the DocumentRoot directive inside the configuration file to the root directory of the virtual host. The root directory is the directory you need to create for the virtual host to hold assets of the site such as PHP script, HTML, CSS and Javascript files, images. And you must create the root directory in the /var/www directory, the same location of the default virtual host\u0026rsquo;s root directory is /var/www/html\nFirst, create a configuration file in Apache\u0026rsquo;s sites-available directory. Assuming we have a domain is your_domain.com - replace with your own domain, we will name the configuration file is your_domain.conf - replace your_domain based on your domain. Here I use the command-line editor is nano to generate and edit the configuration file:\nsudo nano /etc/apache2/sites-available/your_domain.conf The command above will create a new blank file, now copy and paste into it the following configuration code block - Note: replace your_domain.com in the line ServerName your_domain.com bellow by your own domain:\n\u0026lt;VirtualHost *:80\u0026gt; ServerName your_domain.com ServerAdmin webmaster@localhost DocumentRoot /var/www/your_domain ErrorLog ${APACHE_LOG_DIR}/error.log CustomLog ${APACHE_LOG_DIR}/access.log combined \u0026lt;/VirtualHost\u0026gt; Save and close the file when you\u0026rsquo;re done. Because we have used nano, press Ctrl+X, then press y and Enter.\nImportant: If you use your own domain name, you must set up the DNS on your domain name registrar to point your domain to your server\u0026rsquo;s public IP address. You can search this way on Google.\nYou can see the DocumentRoot directive of the configuration file just created is specified to /var/www/your_domain directory. Now create your_domain directory in the /var/www directory as the root directory of your virtual host, use the following command:\nsudo mkdir /var/www/your_domain Next, assign ownership to the your_domain directory is your current system user by using the $USER environment variable:\nsudo chown -R $USER:$USER /var/www/your_domain We have finished creating a new virtual host with its own configuration file and web root directory. And currently your Apache server has two virtual hosts: the default virtual host and the new virtual host you just created for your_domain.com\nNow, you must enable the new virtual host that is just created by using a2ensite command:\nsudo a2ensite your_domain Important: If you only want to test the virtual host that is just created and not using a domain name - by this way you only need use the server\u0026rsquo;s public IP address to access your site. Now, you can remove or comment out the line of the ServerName directive in the configuration file, re-open the your_domain.conf file use nano:\nsudo nano /etc/apache2/sites-available/your_domain.conf Then remove the line of the ServerName directive, you can comment out by put the # character before this directive as bellow or remove the line of the ServerName directive:\n\u0026lt;VirtualHost *:80\u0026gt; #ServerName your_domain.com ServerAdmin webmaster@localhost DocumentRoot /var/www/your_domain ErrorLog ${APACHE_LOG_DIR}/error.log CustomLog ${APACHE_LOG_DIR}/access.log combined \u0026lt;/VirtualHost\u0026gt; Now, you must disable the default virtual host by using a2dissite command:\nsudo a2dissite 000-default To checking whether your configuration you made doesn\u0026rsquo;t contain syntax errors, run the command below:\nsudo apache2ctl configtest Finally, reload Apache so these changes take effect:\nsudo systemctl reload apache2 Your new site is now active, and you can visit your_domain.com or the public IP address of your server (in the case not using a domain name). But before you do that, you need to create an index.php file inside the root /var/www/your_domain directory:\nnano /var/www/your_domain/index.php The command above will create a new blank file, copy and paste the PHP codes bellow into it:\n\u0026lt;?php phpinfo(); Now, open your browser and access your_domain.com or your server\u0026rsquo;s public IP address:\nhttp://yoour_domian.com or http://public_ip_address You\u0026rsquo;ll see a page similar to this:\n","date":"2022-09-19T00:00:00Z","image":"https://clog95.com/posts/how-to-install-linux-apache-mysql-php-lamp-stack-on-ubuntu-2004/install-lamp-stack-on-ubuntu-20-04_hu9f3f570c947ed5d7ef512b1238fd45e1_88144_120x120_fill_q75_box_smart1.jpg","permalink":"https://clog95.com/posts/how-to-install-linux-apache-mysql-php-lamp-stack-on-ubuntu-2004/","title":"How To Install Linux, Apache, MySQL, PHP (LAMP) stack on Ubuntu 20.04"},{"content":"If you are a designer that probably needs a graphic resource to download, this will help you save a lot of time. You can search on Google and see many sites for downloading graphic resources. But, in this article, I will introduce to you the pngtree.com site that I have used until now.\nNow you can visit the site at pngtree.com address, look at the menu, scroll down the site. Here, the site produces a variety of graphic resources such as PNG Images, Backgrounds, Vectors, Icons, Logos, Wallpapers, Powerpoint templates and more. But you can only download 2 resource files per day, to unlimited downloads you need to upgrade your account. Now, let\u0026rsquo;s see some resources on this site:\n","date":"2022-09-11T00:00:00Z","image":"https://clog95.com/posts/png-trees-graphic-resources-variety-is-available-for-download/png-trees-graphic-resources_hu177ec69f427770a5a476e29768e31751_147413_120x120_fill_q75_box_smart1.jpg","permalink":"https://clog95.com/posts/png-trees-graphic-resources-variety-is-available-for-download/","title":"Png Trees Graphic Resources Variety Is Available for Download"},{"content":"What is CSS? CSS stands for Cascading Style Sheets. Like HTML, CSS is not a programming language, it\u0026rsquo;s not a markup language either. CSS is a style sheet language, it\u0026rsquo;s used to style your web pages.\nCSS describes how HTML elements are to be displayed on screen, paper, or in other media. CSS is very helpful, it can control the layout of multiple web pages all at once. External stylesheets are stored in CSS files. CSS Demo - Using CSS to style a HTML page HTML was only created to describe the content of a web page. So you need to use CSS to change the appearance of your HTML page.\nNote: if you don\u0026rsquo;t know what HTML is, I suggest you pause here to read the HTML Introduction.\nHere I will show you a HTML page displayed with four different styles. Click on the Style 1, Style 2, Style 3, Style 4 to see different styles and click on the No style to see only the HTML page without CSS.\nTo see the full web page above click here.\nWhy Use CSS? CSS is used to define styles for your web pages, including design, layout and variations in display for different devices and screen sizes.\nWith CSS you can decorate your website with colors, fonts, images.. to make it more interesting.\nConsider and Anatomy a Simple Instance I will show you how to create a simple web page with cyan background, a logo image, 2 heading, 2 paragraphs and an unordered list. The sample page as below:\nNow, you can download the code and image sample here to follow and compare to this tutorial.\n1. Create an index.html file On your computer create a folder and name it my-site then create an index.html file inside my-site folder.\nOpen index.html file and then copy and paste the following codes into it.\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; The code above is a standard HTML5 document for every web page. If you don\u0026rsquo;t know what HTML is, I suggest you pause here to read the HTML Introduction.\nYou don\u0026rsquo;t need to worry about what it means, just use it and we will learn it later in this series.\n2. Insert a \u0026lt;div\u0026gt; element with a class name is container to wrap your web contents Create a \u0026lt;div\u0026gt; element with a class named container and then position it between \u0026lt;body\u0026gt; and \u0026lt;/body\u0026gt; tags. Look like bellow:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;div class=\u0026#34;container\u0026#34;\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; 3. Add a heading \u0026lt;h1\u0026gt; element defines the main heading Insert \u0026lt;h1\u0026gt; element with its content is CLog95 into between \u0026lt;div class=\u0026quot;container\u0026quot;\u0026gt; and \u0026lt;/div\u0026gt;. Look like bellow:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;div class=\u0026#34;container\u0026#34;\u0026gt; \u0026lt;h1\u0026gt;CLog95\u0026lt;/h1\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; 4. Add an \u0026lt;img\u0026gt; element to get an image Download the image logo here and put it inside my-site folder, the same folder with index.html file. Insert \u0026lt;img\u0026gt; element with an image path is \u0026ldquo;clog95-logo.png\u0026rdquo; for src attribute inside container class and below \u0026lt;h1\u0026gt; element. Look like bellow:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;div class=\u0026#34;container\u0026#34;\u0026gt; \u0026lt;h1\u0026gt;CLog95\u0026lt;/h1\u0026gt; \u0026lt;img src=\u0026#34;clog95-logo.png\u0026#34; alt=\u0026#34;CLog95\u0026#34;\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; 5. Add the rest contents for the web page I will insert a heading \u0026lt;h2\u0026gt; element, two \u0026lt;p\u0026gt; elements, an unordered list \u0026lt;ul\u0026gt; with its contents. Look like bellow:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;div class=\u0026#34;container\u0026#34;\u0026gt; \u0026lt;h1\u0026gt;CLog95\u0026lt;/h1\u0026gt; \u0026lt;img src=\u0026#34;clog95-logo.png\u0026#34; alt=\u0026#34;CLog95\u0026#34;\u0026gt; \u0026lt;h2\u0026gt;Learn web development\u0026lt;/h2\u0026gt; \u0026lt;p\u0026gt;Something you need to learn:\u0026lt;/p\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;HTML\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;CSS\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Javascript\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;PHP\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;p\u0026gt;Here I will show you some basic HTML elements and how to use CSS to style for my web page.\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; 6. Write CSS to style for the web page. Here I will write CSS into index.html file, so I must insert \u0026lt;style\u0026gt; \u0026lt;/style\u0026gt; tags between \u0026lt;head\u0026gt; and \u0026lt;/head\u0026gt; then write some CSS codes between \u0026lt;style\u0026gt; and \u0026lt;/style\u0026gt;.\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Document\u0026lt;/title\u0026gt; \u0026lt;style\u0026gt; /* Writing CSS codes here */ \u0026lt;/style\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; First: setting the background color is cyan and padding the content in for container class\n\u0026lt;style\u0026gt; .container { background-color: cyan; padding: 20px 30px 30px 30px; } \u0026lt;/style\u0026gt; Next: setting the color to red and font size for the contents of the p elements\n\u0026lt;style\u0026gt; p { color: red; font-size: 18px; } \u0026lt;/style\u0026gt; Next: setting the color to blue for the contents of the unordered list ul\n\u0026lt;style\u0026gt; ul { color: blue; } \u0026lt;/style\u0026gt; Next: setting the width of the image logo is 100px\n\u0026lt;style\u0026gt; img { width: 100px; } \u0026lt;/style\u0026gt; Final: All the CSS code look like this\n\u0026lt;style\u0026gt; /* CSS for container class: cyan background and padding the content in */ .container { background-color: cyan; padding: 20px 30px 30px 30px; } /* CSS for p elements: paragraphs is red and font size is 18px */ p { color: red; font-size: 18px; } /* CSS for ul elements: color letters is blue */ ul { color: blue; } /* CSS for img elements: setting the image width is 100px */ img { width: 100px; } \u0026lt;/style\u0026gt; Note: the texts between /* and */ are only a way to write comments to note for you what CSS does so that you can remember what you do when you see it again a long time later.\n7. Combines all the codes into index.html file I will put all CSS codes written between \u0026lt;style\u0026gt; \u0026lt;/style\u0026gt; tags into between \u0026lt;head\u0026gt; and \u0026lt;/head\u0026gt;. Finally all the code inside index.html file is look like bellow:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Document\u0026lt;/title\u0026gt; \u0026lt;style\u0026gt; /* CSS for container class: cyan background and padding the content in */ .container { background-color: cyan; padding: 20px 30px 30px 30px; } /* CSS for p elements: paragraphs is red and font size is 18px */ p { color: red; font-size: 18px; } /* CSS for ul elements: color letters is blue */ ul { color: blue; } /* CSS for img elements: setting the image width is 100px */ img { width: 100px; } \u0026lt;/style\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;div class=\u0026#34;container\u0026#34;\u0026gt; \u0026lt;h1\u0026gt;CLog95\u0026lt;/h1\u0026gt; \u0026lt;img src=\u0026#34;clog95-logo.png\u0026#34; alt=\u0026#34;CLog95\u0026#34;\u0026gt; \u0026lt;h2\u0026gt;Learn web development\u0026lt;/h2\u0026gt; \u0026lt;p\u0026gt;Something you need to learn:\u0026lt;/p\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;HTML\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;CSS\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Javascript\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;PHP\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;p\u0026gt;Here I will show you some basic HTML elements and how to use CSS to style for my web page.\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; You can download my-site folder here that includes the code and image in and compare with your result.\n","date":"2022-09-10T00:00:00Z","image":"https://clog95.com/posts/css-introduction/css-introduction_hu85c5a3a3d904832b98935098b4e97f38_23477_120x120_fill_q75_box_smart1.jpg","permalink":"https://clog95.com/posts/css-introduction/","title":"CSS Introduction"},{"content":"In this article, I will be generalizing about HTML and HTML5, considering a simple HTML document and anatoming it. What are HTML tags and HTML elements and how to use them to embed an image, marking up text on your web page for the viewers to see when visiting your site. Finally you will be redirected when clicking on a link on a web page.\nWhat is HTML? HTML stands for Hyper Text Markup Language, itâs not a programming language, itâs a markup language for creating Web pages.\nHTML describes the structure of a Web page HTML consists of a series of elements HTML elements tell the browser how to display the content Note: HTML elements are represented by HTML tags. The elements are used to markup text, images, videos, games, playable audio tracks, or whatever else for display in a web browser.\nWhat is HTML5? HTML5 is a new version of HTML language that is used for developing modern web. From this point forward, all the tutorials and examples follow the latest HTML5 standard.\nA Simple HTML Document An HTML document (known as an HTML page) wraps up the basic HTML elements. Now we\u0026rsquo;ll consider how individual HTML elements are combined to form an HTML document (called an HTML page).\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;CLog95\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;CLog95\u0026lt;/h1\u0026gt; \u0026lt;h2\u0026gt;Learn web development\u0026lt;/h2\u0026gt; \u0026lt;p\u0026gt;Something you need to learn: HTML, CSS, Javascript, PHP\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;Here I will show you some basic HTML elements and how to use CSS to style for my web page.\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Example Explained:\n\u0026lt;!DOCTYPE html\u0026gt; : doctype declaration, this is a required preamble. Here, defines this document as an HTML5 document. \u0026lt;html\u0026gt; : this element is the root element of an HTML page that wraps all the content on the entire page. \u0026lt;head\u0026gt; : this element contains meta information about the HTML page. Acts as a container for all the stuff you need to build the site that isn\u0026rsquo;t the content you are showing to your page\u0026rsquo;s viewers. \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; : this element sets the character set your document should use to UTF-8. Essentially, with this set it can now handle any textual context you might put on it. So, no reason not to set this and it can help avoid some problems later on. \u0026lt;title\u0026gt; : this element specifies a title for your HTML page, which is the title that is shown in the browser tab the page is loaded in. \u0026lt;body\u0026gt; : this element defines the document\u0026rsquo;s body. Acts as a container for all the contents that you want to show to web users when they visit your web page, such as text, images, videos, games, playable audio tracks, or whatever else. \u0026lt;h1\u0026gt; : this element defines a larger heading. \u0026lt;h2\u0026gt; : like \u0026lt;h1\u0026gt; element, also defines a heading but smaller. \u0026lt;p\u0026gt; : this element defines a paragraph. HTML Tags HTML tags are element names surrounded by angle brackets\n\u0026lt;tagname\u0026gt;content goes hereâ¦\u0026lt;/tagname\u0026gt; Example of \u0026lt;h2\u0026gt; and \u0026lt;p\u0026gt; tags:\n\u0026lt;h2\u0026gt;Learn web development\u0026lt;/h2\u0026gt; \u0026lt;p\u0026gt;Something you need to learn: HTML, CSS, Javascript, PHP\u0026lt;/p\u0026gt; HTML tags normally come in pair like \u0026lt;h2\u0026gt; and \u0026lt;/h2\u0026gt;, or \u0026lt;p\u0026gt; and \u0026lt;/p\u0026gt; The first tag in a pair is the start tag (or opening tag), the second tag is the end tag (or closing tag) The end tag is written like the start tag, but with a forward slash ( / ) inserted before the tag name What is an HTML Element? An HTML element is defined by a start tag, some content, and an end tag\n\u0026lt;tagname\u0026gt;content goes hereâ¦\u0026lt;/tagname\u0026gt; The HTML element is everything from the start tag to the end tag:\n\u0026lt;h1\u0026gt;This is a heading.\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;This is a paragraph.\u0026lt;/p\u0026gt; \u0026lt;br\u0026gt; Now, anatomy the \u0026lt;h1\u0026gt;, \u0026lt;p\u0026gt;, and \u0026lt;br\u0026gt; elements above in following table:\nStart tag Content End tag \u0026lt;h1\u0026gt; This is a heading. \u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt; This is a paragraph. \u0026lt;/p\u0026gt; \u0026lt;br\u0026gt; none none Some HTML elements don\u0026rsquo;t have content (like the \u0026lt;br\u0026gt; element). These elements are called empty elements. Empty elements do not have an end tag! Tags in HTML are case-insensitive. This means they can be written in uppercase or lowercase. For example, a \u0026lt;title\u0026gt; tag could be written as \u0026lt;title\u0026gt;, \u0026lt;TITLE\u0026gt;, \u0026lt;Title\u0026gt;, \u0026lt;TiTlE\u0026gt;, etc.. and it will work well. However, it is best practical to write all tags in lowercase for consistency, readability, and other reasons. Images To embed an image in the HTML page, you need to use the \u0026lt;img\u0026gt; element.\nNow, I will embed my image (download here) that has the name clog95-logo.png. The code as follow:\n\u0026lt;img src=\u0026#34;clog95-logo.png\u0026#34; alt=\u0026#34;CLog95\u0026#34;\u0026gt; Because the \u0026lt;img\u0026gt; element is an empty element so there is no closing \u0026lt;/img\u0026gt; tag and no inner content. Its purpose is to embed an image in the HTML page in the place it appears. You can note src and alt that I have added to the \u0026lt;img\u0026gt; element, which are two attributes for the \u0026lt;img\u0026gt; element.\nThe src attribute has value is unityx-logo.png placed between quotation marks( \u0026quot;\u0026quot; ). This value is the file path of the image, in this case it is the name of the image. The alt attribute has value is CLog95 placed between quotation marks( \u0026quot;\u0026quot; ). This value is a text that will be shown to the viewers in case the image is lost due to some errors. Now, I will embed the image below the \u0026lt;h1\u0026gt; element of the HTML document:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;CLog95\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;CLog95\u0026lt;/h1\u0026gt; \u0026lt;img src=\u0026#34;clog95-logo.png\u0026#34; alt=\u0026#34;CLog95\u0026#34;\u0026gt; \u0026lt;h2\u0026gt;Learn web development\u0026lt;/h2\u0026gt; \u0026lt;p\u0026gt;Something you need to learn: HTML, CSS, Javascript, PHP\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;Here I will show you some basic HTML elements and how to use CSS to style for my web page.\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Marking up text HTML has some essential elements for marking up text that include marking up headings, paragraphs, lists.\nHeadings As you know, a book has the main title, chapter titles, and subtitles, an HTML document can too.\nHTML has 6 heading levels from \u0026lt;h1\u0026gt; to \u0026lt;h6\u0026gt;, in order from largest heading( \u0026lt;h1\u0026gt; ) to smallest heading( \u0026lt;h6\u0026gt; ). In the example of the HTML document above I have used \u0026lt;h1\u0026gt; and \u0026lt;h2\u0026gt;.\n\u0026lt;h1\u0026gt;UnityX\u0026lt;/h1\u0026gt; \u0026lt;h2\u0026gt;Learn web development\u0026lt;/h2\u0026gt; Paragraphs The \u0026lt;p\u0026gt; elements are used for containing paragraphs of text, you\u0026rsquo;ll use these frequently when marking up regular text content. In the example above I have used two \u0026lt;p\u0026gt; elements.\n\u0026lt;p\u0026gt;Something you need to learn: HTML, CSS, Javascript, PHP\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;Here I will show you some basic HTML elements and how to use CSS to style for my web page.\u0026lt;/p\u0026gt; Lists A lot of the web\u0026rsquo;s content is lists and HTML has special elements for these. The most common list types are ordered and unordered lists:\nUnordered lists are lists where the order of the items doesn\u0026rsquo;t matter. Use a \u0026lt;ul\u0026gt; element to wrap the unordered items inside. Ordered lists are lists where the order of the items does matter. Use a \u0026lt;ol\u0026gt; element to wrap the ordered items inside. Each item inside the lists is put inside an \u0026lt;li\u0026gt; (list item) element.\nIn the HTML document above, we have a marking up paragraph as below:\n\u0026lt;p\u0026gt;Something you need to learn: HTML, CSS, Javascript, PHP\u0026lt;/p\u0026gt; Now, I want to turn the HTML, CSS, Javascript, PHP fragments into an unordered list. I could modify this markup to as bellow:\n\u0026lt;p\u0026gt;Something you need to learn:\u0026lt;/p\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;HTML\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;CSS\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Javascript\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;PHP\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; Now, our HTML document will look like this:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;CLog95\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;CLog95\u0026lt;/h1\u0026gt; \u0026lt;img src=\u0026#34;clog95-logo.png\u0026#34; alt=\u0026#34;CLog95\u0026#34;\u0026gt; \u0026lt;h2\u0026gt;Learn web development\u0026lt;/h2\u0026gt; \u0026lt;p\u0026gt;Something you need to learn:\u0026lt;/p\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;HTML\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;CSS\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Javascript\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;PHP\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;p\u0026gt;Here I will show you some basic HTML elements and how to use CSS to style for my web page.\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Links Links are very important - they help you to go anywhere in the internet world! By clicking on the links, you can be redirected to the posts, download files, play an audio track, watch a video, go into other sites or somewhere else.\nTo add a link, we need to use a simple element - this is the \u0026lt;a\u0026gt; element.\nFor example, I wanted that when I click on the CLog95 heading then I will be redirected to the home of my site at the address https://clog95.com/ - I will use the code below:\n\u0026lt;a href=\u0026#34;https://clog95.com/\u0026#34;\u0026gt; \u0026lt;h1\u0026gt;UnityX\u0026lt;/h1\u0026gt; \u0026lt;/a\u0026gt; You can see, I have nested the \u0026lt;h1\u0026gt; element inside the \u0026lt;a\u0026gt; element. The href is an attribute for the \u0026lt;a\u0026gt; element and it has the value is https://clog95.com/ placed between quotation marks( \u0026quot;\u0026quot; ). This value is an address that you will be redirected to when clicking on the \u0026lt;a\u0026gt; element, in this case it is my website address: https://clog95.com/ The final code of our HTML document: \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;CLog95\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;a href=\u0026#34;https://clog95.com/\u0026#34;\u0026gt; \u0026lt;h1\u0026gt;CLog95\u0026lt;/h1\u0026gt; \u0026lt;/a\u0026gt; \u0026lt;img src=\u0026#34;clog95-logo.png\u0026#34; alt=\u0026#34;CLog95\u0026#34;\u0026gt; \u0026lt;h2\u0026gt;Learn web development\u0026lt;/h2\u0026gt; \u0026lt;p\u0026gt;Something you need to learn:\u0026lt;/p\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;HTML\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;CSS\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Javascript\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;PHP\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;p\u0026gt;Here I will show you some basic HTML elements and how to use CSS to style for my web page.\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Now, you can download the code and image sample here then drag and drop it into your browser to check the result.\n","date":"2022-09-10T00:00:00Z","image":"https://clog95.com/posts/html-introduction/html-introduction_hue4439ff7af176d3692fc980e7bd70171_130824_120x120_fill_q75_box_smart1.jpg","permalink":"https://clog95.com/posts/html-introduction/","title":"HTML Introduction"},{"content":"Introduction Domain names are a key part of the Internet infrastructure. They provide a human-readable address for any web server available on the Internet.\nA domain name is an address of your website that people can type into our browser\u0026rsquo;s address bar to visit your website (Like you access the clog95.com site to see this content).\nIn simple terms, your website as a house and your domain name will be its address.\nDomain name Examples: facebook.com, google.com, clog95.com..\nI want a more detailed explanation: The Internet is a large network of computers which each computer on this network can communicate with other computers.\nTo identify any computer is linked to a network, each computer is assigned an IP address (where IP stands for Internet Protocol). It\u0026rsquo;s an address made of a series of four numbers separated by dots, for example: 192.168.2.11.\nThat\u0026rsquo;s perfectly fine for computers, but IP addresses are hard to remember for human and might change over time.\nTo solve this problem we use human-readable addresses called domain names.\nFor example, I assume 173.194.121.32 (at the time of writing, this IP address can change) is the IP address of the domain name google.com. So to visit the google.com site, then you need to enter google.com into your browser\u0026rsquo;s address bar. The thing is the easier way, instead of you have to type 173.194.121.32.\nStructure of domain names: A domain domain name has a simple structure made of several parts (it might be one part only, two, three..), separated by dots and read from the right to left:\nDomain google.com with a subdomain is developers Domain google.com without subdomain For beginners, only need the TLD and one label is enough to make a website (for example google.com, facebook.com, clog95.com). Thus I recommend you to use it for simplicity.\nEach of those parts provides specific information about the whole domain name.\nTLD - Top Level Domain TLDs or Top level domains tell users the general purpose of the service behind the domain name. The most popular is used are .com, .org, and .net that don\u0026rsquo;t require web services to meet any particular criteria, but some TLDs enforce stricter policies so it is clearer what their purpose is. For examples:\nCountry code top level domain - ccTLD : is a top level domain generally used or reserved for a country like .us for United States, .uk for United Kingdom. They are used by websites that want to target audiences in a specific country.\nSponsored top level domain - sTLD : is a specialized top level domain that has a sponsor representing by a specific community served by the domain. For example, .edu is only for use by educational and academic institutions, .gov are only allowed to be used by government departments.\nLabel or Component The labels are what follow the TLD. A label is a case-insensitive character sequence anywhere from 1 to 63 characters in length, containing only the letters A through Z, digits 0 through 9, and the - character (which may not be the first or last character in the label). For example, game, 159, and my-house are all of valid labels.\nThe label located right before the TLD is also called s Secondary Level Domain (SLD).\nA domain name can have many labels. It is not mandatory or necessary to have 3 labels to form a domain name. For instance, www.address.12.my-house.us is a valid domain name, but I recommended you shouldn\u0026rsquo;t use it. For clearly and easier to remember, you should use one label located right before the TLD like google.com, then you can create subdomains with different content located at each, such as developer.google.com, mail.google.com, or cloud.google.com.\nHow Domain Names Actually Work? Note: At the most basic, you\u0026rsquo;ll need the following two things to start a website:\nA domain name : this is an address of your website such as google.com. A web server : this is where your website is hosted. As we already know, when you want to visit a website, you need to type a domain name into your web browser. Let\u0026rsquo;s take a look at the processes:\nType clog95.com in your browser. Your browser asks your computer if it already recognizes the IP address matches with the clog95.com domain name (using a local DNS cache). If it does, your browser already knows the real address of the clog95.com site (where the clog95.com site is live on), now your browser negotiates the contents with the web server to display it for you. End of story. If your computer does not know which IP address matches the clog95.com domain name, it goes on to ask other DNS servers on the global network. These servers then look up for the IP address matching the clog95.com domain name. Now that your computer knows the real address of the clog95.com site, your browser can negotiate contents with the web server and display the content for you (Like the current contents you are reading). ","date":"2022-08-30T23:16:56+07:00","image":"https://clog95.com/posts/what-is-a-domain-name-and-how-does-it-work/what-is-a-domain-name-and-how-does-it-work_hu673c58429d50237adf17b8d3b487c6dd_67830_120x120_fill_q75_box_smart1.jpg","permalink":"https://clog95.com/posts/what-is-a-domain-name-and-how-does-it-work/","title":"What Is a Domain Name and How Does It Work"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;â\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating. â Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code A B C D E F Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ultricies, sapien non euismod aliquam, dui ligula tincidunt odio, at accumsan nulla sapien eget ex. Proin eleifend dictum ipsum, non euismod ipsum pulvinar et. Vivamus sollicitudin, quam in pulvinar aliquam, metus elit pretium purus Proin sit amet velit nec enim imperdiet vehicula. Ut bibendum vestibulum quam, eu egestas turpis gravida nec Sed scelerisque nec turpis vel viverra. Vivamus vitae pretium sapien Code Blocks Code block with backticks \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt;\r\u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt;\r\u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\rCode block with Hugo\u0026rsquo;s internal highlight shortcode \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Diff code block [dependencies.bevy] git = \u0026#34;https://github.com/bevyengine/bevy\u0026#34; rev = \u0026#34;11f52b8c72fc3a568e8bb4a4cd1f3eb025ac2e13\u0026#34; - features = [\u0026#34;dynamic\u0026#34;] + features = [\u0026#34;jpeg\u0026#34;, \u0026#34;dynamic\u0026#34;] List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements â abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nHyperlinked image The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2019-03-11T00:00:00Z","image":"https://clog95.com/posts/markdown-syntax/pawel-czerwinski-8uZPynIu-rQ-unsplash_hud7e36f7e20e71be184458283bdae4646_55974_120x120_fill_q75_box_smart1.jpg","permalink":"https://clog95.com/posts/markdown-syntax/","title":"Markdown Syntax Guide"},{"content":"Hugo ships with several Built-in Shortcodes for rich content, along with a Privacy Config and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.\nYouTube Privacy Enhanced Shortcode Twitter Simple Shortcode âIn addition to being more logical, asymmetry has the advantage that its complete appearance is far more optically effective than symmetry.â\nâ Jan Tschichold pic.twitter.com/gcv7SrhvJb\n\u0026mdash; Graphic Design History (@DesignReviewed) January 17, 2019 Vimeo Simple Shortcode bilibilibi Shortcode Gist Shortcode Gitlab Snippets Shortcode Quote Shortcode Stack adds a quote shortcode. For example:\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\nâ A famous person, The book they wrote Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\nâ Anonymous book Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\nâ Some book Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\nâ Somebody","date":"2019-03-10T00:00:00Z","permalink":"https://clog95.com/posts/rich-content/","title":"Rich Content"},{"content":"Lorem est tota propiore conpellat pectoribus de pectora summo.\nRedit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.\nExierant elisi ambit vivere dedere Duce pollice Eris modo Spargitque ferrea quos palude Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria tractus malis.\nComas hunc haec pietate fetum procerum dixit Post torum vates letum Tiresia Flumen querellas Arcanaque montibus omnes Quidem et Vagus elidunt The Van de Graaf Canon\nMane refeci capiebant unda mulcebat Victa caducifer, malo vulnere contra dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. Faces illo pepulere tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.\nIubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.\nEurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel mitis temploque vocatus, inque alis, oculos nomen non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem Propoetides parte.\n","date":"2019-03-09T00:00:00Z","image":"https://clog95.com/posts/placeholder-text/matt-le-SJSpo9hQf7s-unsplash_hu958d513eeefe5556a31d065479ecc5ac_14205_120x120_fill_q75_box_smart1.jpg","permalink":"https://clog95.com/posts/placeholder-text/","title":"Placeholder Text"},{"content":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\nCreate a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so: {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }} To enable KaTex globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTex on a per page basis include the parameter math: true in content files Note: Use the online reference of Supported TeX Functions\nExamples Block math: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","date":"2019-03-08T00:00:00Z","permalink":"https://clog95.com/posts/math-typesetting/","title":"Math Typesetting"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site\u0026rsquo;s configuration and then you can type emoji shorthand codes directly in content files; e.g.\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\nN.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n.emoji { font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; }","date":"2019-03-05T00:00:00Z","image":"https://clog95.com/posts/emoji-support/the-creative-exchange-d2zvqp3fpro-unsplash_huf941de4769045cdfa8c9ee7036519a2a_35369_120x120_fill_q75_box_smart1.jpg","permalink":"https://clog95.com/posts/emoji-support/","title":"Emoji Support"}]